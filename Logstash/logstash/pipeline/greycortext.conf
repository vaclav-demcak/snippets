# Grycortext transformation script

input {
    file {
        path => ["/usr/share/logstash/data/input/Export_2024-06-27 10_49.csv"]
        start_position => "beginning"
        # sincedb_path => "/dev/null"
        # ignore_older => 0

    }
}

filter { 
    csv { 
        separator => ","
        columns => [ "Severity","Sensor","Interfaces","Event","Src Host","Src Hosts","Dst Host","Dst Hosts","Src Subnet","Src Subnets","Dst Subnet","Dst Subnets","Src User","Dst User","Service","Service Type","Protocol","Events","Start time","End time"] 
        # skip_header => "true"
        # autodetect_column_names => "true"
        # autogenerate_column_names => false
        # columns => [ "Event","Src Host","Start time","End time"] 
    } 
    prune {
        whitelist_names => ["Event","Src Host","Start time","End time"]
        blacklist_names => ["Severity","Sensor","Interfaces","Src Hosts","Dst Host","Dst Hosts","Src Subnet","Src Subnets","Dst Subnet","Dst Subnets","Src User","Dst User","Service","Service Type","Protocol","Events"]
        # blacklist_values => ["Event","Src Host","Start time","End time"]
        # remove_field => [ "foo_%{somefield}", "my_extraneous_field" ]
    }

# Skip header is not working so find a record with Event value "Event" and drop it after
    if [Event] == "Event" {
        drop {}
    }

    clone {
        clones => [ "cloned" ]
    }

    if [type] == "cloned" {
        mutate {
            copy => { "End time" => "Time" }
            replace => { "Start time" => "" } 
            update => { "Event"=> "%{Event} ___  E N D "} 
        }
    } else {
        mutate {
            copy => { "Start time" => "Time" }
            replace => { "End time" => "" } 
            update => { "Event"=> "%{Event} ___  S T A R T " }
        }    
    }

    prune {
        blacklist_names => ["type","@version","@timestamp"]
    }

    translate {
        source => "[Src Host]"
        target => "[User]"
        # dictionary_path => "/usr/share/logstash/data/mapping/user_mappings.yml"  # Path to your external mapping file
        dictionary => {
            "tmb_klm1 (147.232.31.42)"     => "User00001"
            "g6-55-o7d (147.232.31.42)"    => "User00002"
        }        
        fallback => "Unknown User"
        # regex => true
    }

    # clone {
    #     clones => [ "cloned","orig" ]
    # }

    # if [type] =! "cloned" {
    #     mutate {
    #         replace => { "End time" => ""} 
    #     }
    # }

    # if [type] == "cloned" {
    #     mutate {
    #         replace => { "Start time" => "" } 
    #     }
    #     prune {
    #         blacklist_names => ["type","@version","@timestamp"]
    #     }
    # }
    # if [type] == "orig" {
    #     mutate {
    #         replace => { "End time" => "" } 
    #     }    
    #     prune {
    #         blacklist_names => ["type","@version","@timestamp"]
    #     }
    # }
}

output {
    file {
        path => "/usr/share/logstash/data/output/greycorext_transformed_%{+YYYY-MM-dd}.csv"
        # codec => line { format => "%{Event}, %{Src Host}, %{Time}" }
        codec => line { format => "%{Event}, %{User}, %{Time}" }
        # csv_options => {
        #     "hearders" => "a,b,c"
        # }
        # csv_options => {
        #     "write_headers" => true
        # }
        # fields => ["Event","Src Host","Time"]
        # csv_options => {
        #     "write_headers" => true
        #     "headers" => ["Event","Src Host","Start time","End time"]
        # }
        # csv_options => {"col_sep" => "\t" "row_sep" => "\r\n"}
        create_if_deleted => true


# Use Json format for a quick eye check
        # codec => "json"
        # path => "/usr/share/logstash/data/output/greycorext_transformed_%{+YYYY-MM-dd}.json"
    }
}
