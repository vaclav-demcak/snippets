/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */
plugins {
    id 'java-library'
    id 'org.openapi.generator' version '4.3.0'
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

description = 'OpenApi Test Application SpringBoot'
group = 'vd.sandbox.openapi'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    mavenLocal()
}

configurations.all {
    exclude group: 'org.slf4j', module: 'slf4j-simple'
}

dependencies {
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.0'
    implementation("org.springframework.boot:spring-boot-starter-web:2.1.8.RELEASE") {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    api("io.springfox:springfox-swagger2:2.9.2")
    api("io.springfox:springfox-swagger-ui:2.9.2")
    api("org.openapitools:jackson-databind-nullable:0.1.0")
    compile('org.springframework.boot:spring-boot-starter-log4j2')
    compile('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.7.3')
    compile('com.fasterxml.jackson.module:jackson-module-kotlin:2.7.3')
    compile 'org.openapitools:openapi-generator-gradle-plugin:4.3.0'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

/*
    OpenApi Generator has own plugin: org.openapi.generator
    maven repo URL: https://mvnrepository.com/artifact/org.openapitools/openapi-generator-gradle-plugin
    Generator prop: https://github.com/OpenAPITools/openapi-generator/tree/master/docs/generators
    Generator docs: https://openapi-generator.tech/docs/plugins
    Swagger spec  : https://swagger.io/docs/specification/about/
    Example of use: https://github.com/OpenAPITools/openapi-generator/tree/master/samples
                    https://github.com/gantsign/spring-petclinic-openapi

    We are not using Plugin directly because the default task don't catch a target for this tutorials,
    but everyone is free to edit it as he need

    Default tasks are:

    |Task	            |Description
    |openApiGenerate	|Generate code via Open API Tools Generator for Open API 2.0 or 3.x specification documents.
    |openApiGenerators	|Lists generators available via Open API Generators.
    |openApiMeta	    |Generates a new generator to be consumed via Open API Generator.
    |openApiValidate	|Validates an Open API 2.0 or 3.x specification document.

    The access could be provided by add next line to build.gradle

     apply plugin: 'org.openapi.generator'

 */


task buildSpring(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    generatorName = "spring"
    library = 'spring-boot'
    inputSpec = "$projectDir/API_description/swagger/api.yml".toString()
    outputDir = "$buildDir/spring".toString()
    apiPackage = "vd.javatorium.openapi.spring.api"
    invokerPackage = "vd.javatorium.openapi.spring.invoker"
    modelPackage = "vd.javatorium.openapi.spring.model"
    modelNameSuffix = 'Dto'
    ignoreFileOverride = "$projectDir/src/main/resources/openapi-generator/.openapi-generator-ignore".toString()
    configOptions = [
            configPackage          : 'vd.javatorium.openapi.spring.app.swagger',
            dateLibrary            : 'java8',
            java8                  : 'true',
            hideGenerationTimestamp: 'true',
            useTags                : 'true',
            useBeanValidation      : 'false'
    ]
    systemProperties = [
            modelDocs: "false"
    ]
    skipValidateSpec = true
    logToStderr = true
    generateAliasAsModel = false
    // set to true and set environment variable {LANG}_POST_PROCESS_FILE
    // (e.g. SCALA_POST_PROCESS_FILE) to the linter/formatter to be processed.
    // This command will be passed one file at a time for most supported post processors.
    enablePostProcessFile = false
}

compileJava.dependsOn(buildSpring)

sourceSets {
    getByName("main") {
        java {
            srcDir("$buildDir/spring/src/main/java")
        }
    }
}

// see conf prop: https://github.com/OpenAPITools/openapi-generator/blob/master/docs/generators/kotlin-spring.md
task buildKotlinSpring(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    generatorName = "kotlin-spring"
    library = 'spring-boot'
    inputSpec = "$projectDir/API_description/swagger/api.yml".toString()
    outputDir = "$buildDir/spring".toString()
    apiPackage = "vd.javatorium.openapi.spring.api"
    invokerPackage = "vd.javatorium.openapi.spring.invoker"
    modelPackage = "vd.javatorium.openapi.spring.model"
    modelNameSuffix = 'Dto'
    ignoreFileOverride = "$projectDir/src/main/resources/openapi-generator/.openapi-generator-ignore".toString()
    configOptions = [
            configPackage          : 'vd.javatorium.openapi.spring.app.swagger',
            dateLibrary            : 'java8',
            java8                  : 'true',
            hideGenerationTimestamp: 'true',
            useTags                : 'true',
            useBeanValidation      : 'false'
    ]
    systemProperties = [
            modelDocs: "false"
    ]
    skipValidateSpec = true
    logToStderr = true
    generateAliasAsModel = false
    // set to true and set environment variable {LANG}_POST_PROCESS_FILE
    // (e.g. SCALA_POST_PROCESS_FILE) to the linter/formatter to be processed.
    // This command will be passed one file at a time for most supported post processors.
    enablePostProcessFile = false
}


task validateSpec(type: org.openapitools.generator.gradle.plugin.tasks.ValidateTask){
    inputSpec = "$projectDir/API_description/swagger/api.yml".toString()
    recommend = true
}

task makeMeta(type: org.openapitools.generator.gradle.plugin.tasks.MetaTask) {
    generatorName = "Playground sample"
    packageName = "vd.javatorium.openapi"
    outputFolder = "$buildDir/meta".toString()
}

task makeAsciidoc(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask){
    generatorName = "asciidoc"
    inputSpec = "$projectDir/API_description/swagger/api.yml".toString()
    outputDir = "$buildDir/docs".toString()
    configOptions = [
            appName          : "User OpenAPI Playground",
            appDescription   : "Project defines a base skelet for introduction and understanding OpenAPI initiative",
            infoEmail        : "vaclav.demcak@gmail.com"
    ]
}

task makeCwiki(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask){
    generatorName = "cwiki"
    inputSpec = "$projectDir/API_description/swagger/api.yml".toString()
    outputDir = "$buildDir/docs".toString()
    configOptions = [
            appName          : 'User OpenAPI Playground',
            appDescription   : 'Project defines a base skelet for introduction and understanding OpenAPI initiative',
            infoEmail        : 'vaclav.demcak@gmail.com'
    ]
}

task makeMarkdown(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask){
    generatorName = "markdown"
    inputSpec = "$projectDir/API_description/swagger/api.yml".toString()
    outputDir = "$buildDir/docs".toString()
}